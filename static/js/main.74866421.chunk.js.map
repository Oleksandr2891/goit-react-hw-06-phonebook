{"version":3,"sources":["Componenets/ContactList/ContactListStyled.jsx","Componenets/ContactList/ContactListItem/ContactListItemStyled.jsx","Componenets/ContactList/ContactListItem/ContactListItem.jsx","Componenets/ContactList/ContactList.jsx","Componenets/Filter/FilterStyled.jsx","Componenets/Filter/FIlter.jsx","Componenets/Form/FormStyled.jsx","Componenets/Form/Form.jsx","Componenets/Section/SectionStyled.jsx","Componenets/Section/Section.jsx","style/GlobalStyle.jsx","App.js","index.js"],"names":["ContactWrapper","styled","ul","ContactItem","li","ContactListItem","id","name","number","onDeleteContact","className","onClick","ContactList","contacts","map","FilterWrapper","label","FIlter","filter","onChange","type","value","FormWrapper","form","Form","onSubmit","useState","setName","setNumber","handleChangeInput","event","currentTarget","alert","preventDefault","uuidv4","pattern","title","required","SectionContainer","section","Section","children","createGlobalStyle","App","setContacts","setFilter","useEffect","parsedContacts","JSON","parse","localStorage","getItem","length","contactsBase","setItem","stringify","GlobalStyle","data","findName","find","item","console","log","prevContacts","normalizedFilter","toLowerCase","contact","includes","getVisibleContacs","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74866421.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\n\r\nexport const ContactWrapper = styled.ul`\r\n    \r\n    padding: 15px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-grow: 4;\r\n     \r\n`;","import styled from \"styled-components\";\r\n\r\n\r\nexport const ContactItem = styled.li`\r\n    padding: 15px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    font-size: 24px;\r\n\r\n    .buttonDelete{\r\n        text-decoration: none;\r\n        display: inline-block;\r\n        width: 100px;\r\n        height: 20px;\r\n        line-height: 16px;\r\n        border-radius: 45px;\r\n        margin: 10px 20px;\r\n        font-size: 10px;\r\n        text-transform: uppercase;\r\n        text-align: center;\r\n        letter-spacing: 3px;\r\n        font-weight: 600;\r\n        color: #524f4e;\r\n        background: white;\r\n        box-shadow: 0 8px 15px rgba(0, 0, 0, .1);\r\n        transition: .3s;\r\n    }\r\n    .buttonDelete:hover {\r\n        background: #e53a2e;\r\n        box-shadow: 0 15px 20px rgba(46, 229, 157, .4);\r\n        color: white;\r\n        transform: translateY(-7px);\r\n    }\r\n        \r\n`;","import { ContactItem } from \"./ContactListItemStyled\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactListItem = ({ id, name, number, onDeleteContact }) => {\r\n    return (\r\n        <ContactItem>\r\n            <p>{name}: {number}</p>\r\n            <button className=\"buttonDelete\" onClick={() => onDeleteContact(id)}>Delete</button>\r\n        </ContactItem>\r\n    );\r\n}\r\n\r\nexport default ContactListItem;\r\n\r\nContactListItem.propTypes = {\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    onDeleteContact: PropTypes.func,\r\n}","import PropTypes from 'prop-types';\r\nimport { ContactWrapper } from \"./ContactListStyled\";\r\nimport ContactListItem from \"./ContactListItem/ContactListItem\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n    return (\r\n        <ContactWrapper>\r\n            {contacts?.map(({ id, name, number }) => <ContactListItem key={id} name={name} number={number} id={id} onDeleteContact={onDeleteContact} />)}\r\n        </ContactWrapper>\r\n    )\r\n}\r\n\r\nexport default ContactList;\r\n\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.array,\r\n    onDeleteContact: PropTypes.func,\r\n}","import styled from \"styled-components\";\r\n\r\n\r\nexport const FilterWrapper = styled.label`\r\n\r\n    padding: 15px;\r\n    display: flex;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    flex-grow: 1;\r\n    \r\n\r\n    .input {\r\n        display:block;\r\n        font-size: 20px;\r\n        width: 200px;\r\n        width:450;\r\n        margin:10px 0;\r\n        background-color: #fafafa;\r\n        border:0;\r\n        border-radius: 5px;\r\n        box-shadow:0 0 4px rgba(0,0,0,0.3);\r\n        transition: .3s box-shadow;\r\n    }\r\n\r\n    .input:hover {\r\n        box-shadow:0 0 4px rgba(0,0,0,0.5);\r\n    }\r\n`;","import { FilterWrapper } from \"./FilterStyled\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FIlter = ({ filter, onChange }) => {\r\n    return (\r\n        <FilterWrapper>\r\n            Find contact by name\r\n            <input className=\"input\" type=\"text\" value={filter} onChange={onChange} />\r\n        </FilterWrapper>\r\n    );\r\n}\r\n\r\nexport default FIlter;\r\n\r\nFIlter.propTypes = {\r\n    filter: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n}","import styled from \"styled-components\";\r\n\r\n\r\nexport const FormWrapper = styled.form`\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n\r\n    label {\r\n        padding: 15px;\r\n        display: flex;\r\n        font-size: 20px;\r\n        font-weight: 600;\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n    }\r\n\r\n\r\n    .input {\r\n        display:block;\r\n        font-size: 20px;\r\n        width: 200px;\r\n        width:450;\r\n        margin:10px 0;\r\n        background-color: #fafafa;\r\n        border:0;\r\n        border-radius: 5px;\r\n        box-shadow:0 0 4px rgba(0,0,0,0.3);\r\n        transition: .3s box-shadow;\r\n    }\r\n\r\n    .input:hover {\r\n        box-shadow:0 0 4px rgba(0,0,0,0.5);\r\n    }\r\n\r\n    .buttonSubmit {\r\n        text-decoration: none;\r\n        display: inline-block;\r\n        width: 175px;\r\n        height: 45px;\r\n        line-height: 45px;\r\n        border-radius: 45px;\r\n        margin: 10px 20px;\r\n        font-family: 'Montserrat', sans-serif;\r\n        font-size: 11px;\r\n        text-transform: uppercase;\r\n        text-align: center;\r\n        letter-spacing: 3px;\r\n        font-weight: 600;\r\n        color: #524f4e;\r\n        background: white;\r\n        box-shadow: 0 8px 15px rgba(0, 0, 0, .1);\r\n        transition: .3s;\r\n    }\r\n    .buttonSubmit:hover {\r\n        background: #2EE59D;\r\n        box-shadow: 0 15px 20px rgba(46, 229, 157, .4);\r\n        color: white;\r\n        transform: translateY(-7px);\r\n    }\r\n`;","import { FormWrapper } from \"./FormStyled\";\r\nimport { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nexport default function Form({ onSubmit }) {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const handleChangeInput = event => {\r\n        const { name, value } = event.currentTarget;\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n\r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n\r\n            default:\r\n                alert(\"нет такой кнопки\");\r\n        }\r\n    }\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        onSubmit({ name, number, id: uuidv4() });\r\n        setName('');\r\n        setNumber('')\r\n    }\r\n\r\n\r\n    return (\r\n        <FormWrapper onSubmit={handleSubmit}>\r\n            <label>\r\n                Name\r\n                <input\r\n                    className=\"input\"\r\n                    onChange={handleChangeInput}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    value={name}\r\n                    required\r\n                />\r\n            </label>\r\n            <label>\r\n                Number\r\n                <input\r\n                    className=\"input\"\r\n                    onChange={handleChangeInput}\r\n                    value={number}\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                />\r\n            </label>\r\n            <button type=\"submit\" className=\"buttonSubmit\">Add contact</button>\r\n        </FormWrapper>\r\n    );\r\n}","import styled from \"styled-components\";\r\n\r\n\r\nexport const SectionContainer = styled.section`\r\n    padding: 20px;\r\n    background-color: #23e5ecf0;\r\n    width: 800px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    text-align: center;\r\n\r\n    .contactsWrapper {\r\n        display:flex;\r\n        align-content: stretch\r\n    }\r\n\r\n    .title {\r\n        text-align: center;\r\n        align-items: flex-start;\r\n    }\r\n`;","import { SectionContainer } from \"./SectionStyled\";\r\n\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <SectionContainer>\r\n            <h1 className=\"title\">{title}</h1>\r\n            {children}\r\n        </SectionContainer>\r\n    );\r\n}\r\n\r\nexport default Section;","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport default createGlobalStyle`\r\nhtml {\r\n  box-sizing: border-box;\r\n}\r\n\r\n*,\r\n*::after,\r\n*::before {\r\n  box-sizing: inherit;\r\n}\r\n\r\nh1,\r\nh2,\r\nh3,\r\np {\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n}\r\n\r\nul,\r\nol {\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  padding-left: 0;\r\n  list-style: none;\r\n}\r\n\r\nimg {\r\n  display: block;\r\n  max-width: 100%;\r\n  height: auto;\r\n}\r\n\r\n.list {\r\n  list-style: none;\r\n}\r\n\r\n\r\nbody {\r\n  margin: 0;\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n    sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n`;\r\n","import { useState, useEffect } from 'react';\nimport ContactList from './Componenets/ContactList/ContactList';\nimport FIlter from './Componenets/Filter/FIlter';\nimport Form from './Componenets/Form/Form';\nimport Section from './Componenets/Section/Section';\nimport { contactsBase } from './contacts.json';\nimport GlobalStyles from \"../src/style/GlobalStyle\";\n\nexport default function App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n\n  useEffect(() => {\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n    parsedContacts?.length ? setContacts(parsedContacts) : setContacts(contactsBase);\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts))\n  }, [contacts])\n\n\n  const handleSubmit = data => {\n    const findName = contacts.find(item => item.name === data.name);\n    console.log(findName)\n    if (!findName) {\n      return setContacts(prevContacts => [...prevContacts, data])\n    } else {\n      return alert(`${data.name} is already in contacts`)\n    }\n  };\n\n  const onChangeFilter = event => setFilter(event.currentTarget.value);\n\n  const getVisibleContacs = () => {\n    const normalizedFilter = filter.toLowerCase();\n    if (normalizedFilter) {\n      return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n    } else {\n      return contacts;\n    }\n\n  };\n\n\n  const onDeleteContact = contactId => {\n    setContacts(prevContacts => ([...prevContacts.filter(contact => contact.id !== contactId)]))\n  };\n\n\n\n  return (\n    <>\n      <GlobalStyles />\n      <Section title={'Phonebook'}>\n        <Form onSubmit={handleSubmit} />\n      </Section>\n      <Section title={'Contacts'}>\n        <div className=\"contactsWrapper\">\n          <FIlter filter={filter} onChange={onChangeFilter} />\n          <ContactList contacts={getVisibleContacs()} onDeleteContact={onDeleteContact} />\n        </div>\n      </Section>\n    </>\n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}